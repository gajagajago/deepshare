<!--#include virtual="header.txt"-->

<h1>Platforms</h1>
<h2 id="os">Operating Systems<a class="slurm_link" href="#os"></a></h2>
<ul>
<li><b>FreeBSD</b> &mdash; Limited support, not actively tested.</li>
<li><b>Linux</b> &mdash; Slurm has been thoroughly tested on most popular Linux
distributions using arm64 (aarch64), ppc64, and x86_64 architectures. Some
features are limited to recent releases and newer Linux kernel versions.
Currently supported distributions include:
<ul>
<li>Cray Linux Environment 7</li>
<li>Debian 10 (Buster)</li>
<li>Debian 11 (Bullseye)</li>
<li>RedHat Enterprise Linux 7 (RHEL7), CentOS 7, Scientific Linux 7</li>
<li>RedHat Enterprise Linux 8 (RHEL8) and RHEL8 derivatives</li>
<li>SUSE Linux Enterprise Server (SLES) 12</li>
<li>SUSE Linux Enterprise Server (SLES) 15</li>
<li>Ubuntu 18.04</li>
<li>Ubuntu 20.04</li>
</ul>
</li>
<li><b>NetBSD</b> &mdash; Limited support, not actively tested.</li>
<li><b>macOS</b> &mdash; Slurm has run on macOS in the past, but does not
currently. It should be possible to fix this with some adjustments to linker
and compiler flags, and any patches would be appreciated.
</ul>

<h2 id="database">Databases<a class="slurm_link" href="#database"></a></h2>
<p>Slurm will be built with support for MySQL if it finds supported
development libraries at build time. Although it is possible to build Slurm
against older versions of MySQL, it is not recommended. SchedMD recommends
you use a currently supported version of MySQL or MariaDB.
</p>

<p><b>NOTE</b>: If you have an existing Slurm accounting database and
plan to upgrade your database server to MariaDB 10.2.1 (or newer) from a
pre-10.2.1 version or from any version of MySQL, please contact SchedMD
for assistance.</p>

<h2 id="accel">Accelerators<a class="slurm_link" href="#accel"></a></h2>

<p>Slurm has optional support for managing a variety of accelerator cards.
Specific plugins have been developed for:</p>
<ul>
<li>gres/gpu with AutoDetect=nvml &mdash; autodetection of NVIDIA GPUs through their proprietary NVML library (tested on x86_64 and arm64)</li>
<li>gres/mps &mdash; NVIDIA CUDA Multi-Process Service provides ways to share GPUs between multiple compute processes</li>
</ul>

<p style="text-align:center;">Last modified 27 April 2022</p>

<!--#include virtual="footer.txt"-->
